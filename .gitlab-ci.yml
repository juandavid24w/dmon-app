stages:
    - lint
    - build
    - test
    - deploy

cache:
    paths:
        - .cache/pip/
        - venv/
        - staticfiles/

# Defines the job in Static Analysis
django-lint:
    image: python:alpine
    stage: lint
    before_script:
        - .gitlab/django_before_install.sh
        - source venv/bin/activate
    script:
        - pylama .

# Defines the job in build
# Checks if migrations files are missing
django-migrations:
    image: python:alpine
    stage: build
    needs: ['django-lint']
    before_script:
        - .gitlab/django_before_install.sh
        - source venv/bin/activate
    script:
        - python3 manage.py makemigrations --check
        - python3 manage.py migrate --check
        - python3 manage.py check
        - python3 manage.py check --database default
        - python3 manage.py check --deploy

# Defines the job in test
django-tests:
    image: python:alpine
    stage: test
    needs: ['django-migrations', 'django-lint']
    before_script:
        - .gitlab/django_before_install.sh
        - source venv/bin/activate
    script:
        - coverage run manage.py test
        - coverage xml
        - coverage report

    coverage: '/TOTAL.*\s+(\d+%)$/'
    artifacts:
        reports:
            coverage_report:
                coverage_format: cobertura
                path: coverage.xml

# Deploy polls app to Heroku
heroku-deploy:
    stage: deploy
    image: ruby:latest
    needs: ['django-tests']
    before_script:
        - .gitlab/dpl_before_script.sh
    script:
        - dpl --provider=heroku --app=$HEROKU_APP_STAGING --api-key=$HEROKU_API_KEY
